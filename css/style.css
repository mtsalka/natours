/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7; /* e.g. 1.7 times bigger than pre-defined */
  color: #777;
  padding: 30px;
}

.header {
  position: relative;
  height: 95vh; /* at every point height of the box will be 95% of viewport */
  background-image: linear-gradient(
    to right bottom, 
    rgba(126, 213, 111, 0.8), 
    rgba(40, 180, 131, 0.8)),
  url("/img/hero.jpg"); /*the order is 1) top to 2) bottom; gradient can be like to right bottom*/
  background-size: cover; /* at every point will try to fit the element width inside of the box */
  background-position: top; /*top of the image stays at the top of the container while  viewport size is changed  */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); /*clock-wise order stating from upper-left corner*/
}

.logo-box {
  position: absolute;
  top: 40px;
  left: 40px;
}

.logo {
  height: 35px;
}

.text-box {
  position: absolute;
  top: 40%;
  left: 50%; /* % from the parent element, e.g. 50% will start exactly in the middle of parent*/
  transform: translate(-50%, -50%); /* shifted to the left 50% from width of element itself*/
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  
  backface-visibility: hidden; /*removes "shaking"*/
}

.heading-primary-main {
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;
  
  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out; /*faster ath the beginning, slower at the end*/
  
  /*
  animation-delay: 3s;
  animation-iteration-count: 3;
  */
}

.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.4px;
  
  animation-name: moveInRight;
  animation-duration: 1s;
  animation-timing-function: ease-out;
}

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-100px); /*x direction, like math, negative will go left*/
  }

  80% {
    transform: translateX(10px); /*x direction, positive will go to the right*/
  }

  100% {
    opacity: 1;
    transform: translate(0); /*0 will look exactly as defined initially*/
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px); 
  }

  80% {
    transform: translateX(-10px);
  }

  100% {
    opacity: 1;
    transform: translate(0); 
  }
}